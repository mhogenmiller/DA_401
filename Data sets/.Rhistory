piepercent<-round(100*gender2/sum(gender2),1)
colors<-c("light blue","pink")
pie(gender2,labels=piepercent,main='Gender with Gym Data',col=colors)
legend('topright',labels,fill=colors,cex=1)
gender2<- c(59.9,40.1)
labels<-c("Female","Male")
piepercent<-round(100*gender2/sum(gender2),1)
colors<-c("orange","light blue")
pie(gender2,labels=piepercent,main='Gender with Gym Data',col=colors)
legend('topright',labels,fill=colors,cex=1)
#With Gym data
gender2<- c(59.9,40.1)
labels<-c("Female","Male")
piepercent<-round(100*gender2/sum(gender2),1)
colors<-c("orange","light blue")
pie(gender2,labels=piepercent,main='Gender with Gym Data',col=colors)
legend('topright',labels,fill=colors,cex=1)
#Without Gym data
gender2<- c(73.3,26.7)
labels<-c("Female","Male")
piepercent<-round(100*gender2/sum(gender2),1)
colors<-c("orange","light blue")
pie(gender2,labels=piepercent,main='Gender with Gym Data',col=colors)
legend('topright',labels,fill=colors,cex=1)
#With Gym data
gender2<- c(59.9,40.1)
labels<-c("Female","Male")
piepercent<-round(100*gender2/sum(gender2),1)
colors<-c("orange","light blue")
pie(gender2,labels=piepercent,main='Gender with Gym Data',col=colors)
legend('topright',labels,fill=colors,cex=1)
#Without Gym data
gender2<- c(73.3,26.7)
labels<-c("Female","Male")
piepercent<-round(100*gender2/sum(gender2),1)
colors<-c("orange","light blue")
pie(gender2,labels=piepercent,main='Gender without Gym Data',col=colors)
legend('topright',labels,fill=colors,cex=1)
gender2<- c(73.3,26.7)
gender2<- c(73.3,26.7)
gender2<- c(73.3,26.7)
labels<-c("Female","Male")
#With Gym data
gender2<- c(59.9,40.1)
labels<-c("Female","Male")
piepercent<-round(100*gender2/sum(gender2),1)
colors<-c("orange","light blue")
pie(gender2,labels=piepercent,main='Gender with Gym Data',col=colors)
legend('topright',labels,fill=colors,cex=1)
#Without Gym data
gender2<- c(73.3,26.7)
labels<-c("Female","Male")
piepercent<-round(100*gender2/sum(gender2),1)
colors<-c("orange","light blue")
pie(gender2,labels=piepercent,main='Gender Without Gym Data',col=colors)
legend('topright',labels,fill=colors,cex=1)
#With Gym data
gender2<- c(59.9,40.1)
labels<-c("Female","Male")
piepercent<-round(100*gender2/sum(gender2),1)
colors<-c("orange","light blue")
pie(gender2,labels=piepercent,main='Gender ith Gym Data',col=colors)
legend('topright',labels,fill=colors,cex=1)
#Without Gym data
gender2<- c(73.3,26.7)
labels<-c("Female","Male")
piepercent<-round(100*gender2/sum(gender2),1)
colors<-c("orange","light blue")
pie(gender2,labels=piepercent,main='Gender without Gym Data',col=colors)
legend('topright',labels,fill=colors,cex=1)
#With Gym data
gender2<- c(59.9,40.1)
labels<-c("Female","Male")
piepercent<-round(100*gender2/sum(gender2),1)
colors<-c("light blue","blue")
pie(gender2,labels=piepercent,main='Gender with Gym Data',col=colors)
legend('topright',labels,fill=colors,cex=1)
#Without Gym data
gender2<- c(73.3,26.7)
labels<-c("Female","Male")
piepercent<-round(100*gender2/sum(gender2),1)
colors<-c("light blue","blue")
pie(gender2,labels=piepercent,main='Gender without Gym Data',col=colors)
legend('topright',labels,fill=colors,cex=1)
#With Gym data
gender2<- c(59.9,40.1)
labels<-c("Female","Male")
piepercent<-round(100*gender2/sum(gender2),1)
colors<-c("light blue","blue")
pie(gender2,labels=piepercent,main='Gender With Gym Data',col=colors)
legend('topright',labels,fill=colors,cex=1)
#Without Gym data
gender2<- c(73.3,26.7)
labels<-c("Female","Male")
piepercent<-round(100*gender2/sum(gender2),1)
colors<-c("light blue","blue")
pie(gender2,labels=piepercent,main='Gender Without Gym Data',col=colors)
legend('topright',labels,fill=colors,cex=1)
read.csv('/Users/morganhogenmiller/Desktop/GitHub/DA_401/broadway(corgi)1.csv')
read.csv('/Users/morganhogenmiller/Desktop/GitHub/DA_401/Wikipedia_Data.csv')
Wikipedia=read.csv('/Users/morganhogenmiller/Desktop/GitHub/DA_401/Wikipedia_Data.csv')
Wikipedia$weekT <- log(Wikipedia$Weeks)
Wikipedia
Wikipedia$weekT10 <- log10(Wikipedia$Weeks)
Wikipedia
lm(WeekT~Weeks,Wikipedia)
lm(weekT~Weeks,Wikipedia)
model=lm(weekT~Weeks,Wikipedia)
model
summary(model)
ggplot(data = Wikipedia, aes(x = weekT, y = Weeks)) +
geom_point(color='blue') +
geom_smooth(method = "lm", se = FALSE)
library(ggplot2)
ggplot(data = Wikipedia, aes(x = weekT, y = Weeks)) +
geom_point(color='blue') +
geom_smooth(method = "lm", se = FALSE)
ggplot(data = Wikipedia, aes(x = Sentiment, y = weekT)) +
geom_point(color='blue') +
geom_smooth(method = "lm", se = FALSE)
model=lm(weekT~Sentiment,Wikipedia)
View(Wikipedia)
ggplot(data = Wikipedia, aes(x = Sentimentality, y = weekT)) +
geom_point(color='blue') +
geom_smooth(method = "lm", se = FALSE)
ggplot(data = Wikipedia, aes(x = Sentimentality, y = weekT)) +
geom_point(color='blue') +
geom_smooth(method = "lm", se = FALSE) +ylab('Week (log transformed)')
ggplot(data = Wikipedia, aes(x = Sentimentality, y = weekT)) +
geom_point(color='blue') +
geom_smooth(method = "lm", se = FALSE) +ylab('Week (log transformed)') +ggtitle('Sentimentality v. Week')
ggplot(data = Wikipedia, aes(x = Sentimentality, y = weekT)) +
geom_point(color='blue') +
geom_smooth(method = "lm", se = FALSE) +ylab('Week (log transformed)') +ggtitle('Sentimentality v. Week') + theme(plot.title = element_text(hjust = 0.5))
ggplot(data = Wikipedia, aes(x = Sentimentality, y = weekT)) +
geom_point(color='blue') +
geom_smooth(method = "lm", se = FALSE) +ylab('Week (log transformed)') +ggtitle('Sentimentality v. Week') + theme(plot.title = element_text(hjust = 0.5)) +theme
ggplot(data = Wikipedia, aes(x = Sentimentality, y = weekT)) +
geom_point(color='blue') +
geom_smooth(method = "lm", se = FALSE) +ylab('Week (log transformed)') +ggtitle('Sentimentality v. Week') + theme(plot.title = element_text(hjust = 0.5)) +theme_bw()
ggplot(data = Wikipedia, aes(x = Sentimentality, y = weekT)) +
geom_point(color='blue') +
geom_smooth(method = "lm", se = FALSE) +ylab('Week (log transformed)') + ggtitle('Sentimentality v. Week') + theme(plot.title = element_text(hjust = 0.5)) + theme_bw()
ggplot(data = Wikipedia, aes(x = Sentimentality, y = weekT)) +
geom_point(color='blue') +
geom_smooth(method = "lm", se = FALSE) +ylab('Week (log transformed)') + ggtitle('Sentimentality v. Week') +  theme_bw() + theme(plot.title = element_text(hjust = 0.5))
ggplot(data = Wikipedia, aes(x = Sentimentality, y = weekT)) +
geom_point(color='blue') +
geom_smooth(method = "lm", se = FALSE) +
ylab('Week (log transformed)') +
ggtitle('Sentimentality v. Week') +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
geom_point(color='green')
ggplot(data = Wikipedia, aes(x = Sentimentality, y = weekT)) +
geom_point(color='blue') +
geom_smooth(method = "lm", se = FALSE) +
ylab('Week (log transformed)') +
ggtitle('Sentimentality v. Week') +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
geom_point(color='purple')
summary(model)
model=lm(weekT~Sentimentality,GH)
GH=read.csv('/Users/morganhogenmiller/Desktop/GitHub/DA_401/google_headlines.csv')
GH$weekT <- log(GH$Weeks)
GH$weekT10 <- log10(GH$Weeks)
model=lm(weekT~Sentimentality,GH)
summary(model)
ggplot(data = GH, aes(x = Sentimentality, y = weekT)) +
geom_point(color='blue') +
geom_smooth(method = "lm", se = FALSE) +
ylab('Week (log transformed)') +
ggtitle('Sentimentality v. Week') +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
geom_point(color='purple')
Wikipedia_Data
Wikipedia_Data
Wikipedia=read.csv('/Users/morganhogenmiller/Desktop/GitHub/DA_401/Wikipedia_Data.csv')
Wikipedia$weekT <- log(Wikipedia$Weeks)
Wikipedia$weekT10 <- log10(Wikipedia$Weeks)
Wikipedia=read.csv('/Users/morganhogenmiller/Desktop/GitHub/DA_401/Wikipedia_Data.csv')
Wikipedia$weekT <- log(Wikipedia$Weeks)
Wikipedia$weekT10 <- log10(Wikipedia$Weeks)
Wikipedia
model=lm(weekT~Sentimentality,Wikipedia)
summary(model)
Wikipedia=read.csv('/Users/morganhogenmiller/Desktop/GitHub/DA_401/Wikipedia_Data.csv')
Wikipedia$weekT <- log(Wikipedia$Weeks)
Wikipedia$weekT10 <- log10(Wikipedia$Weeks)
model=lm(weekT~Sentimentality,Wikipedia)
summary(model)
library(ggplot2)
# Plotting sentiment v. weeks #
#import csv
Wikipedia=read.csv('/Users/morganhogenmiller/Desktop/GitHub/DA_401/Wikipedia_Data.csv')
#log transform
Wikipedia$weekT <- log(Wikipedia$Weeks)
Wikipedia$weekT10 <- log10(Wikipedia$Weeks)
model=lm(weekT~Sentimentality,Wikipedia)
summary(model)
#linear model
ggplot(data = Wikipedia, aes(x = Sentimentality, y = weekT)) +
geom_point(color='blue') +
geom_smooth(method = "lm", se = FALSE) +
ylab('Week (log transformed)') +
ggtitle('Sentimentality v. Week') +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
geom_point(color='purple')
model=lm(weekT~Sentimentality,GH)
GH=read.csv('/Users/morganhogenmiller/Desktop/GitHub/DA_401/google_headlines.csv')
GH$weekT <- log(GH$Weeks)
GH$weekT10 <- log10(GH$Weeks)
model=lm(weekT~Sentimentality,GH)
summary(model)
ggplot(data = GH, aes(x = Sentimentality, y = weekT)) +
geom_point(color='blue') +
geom_smooth(method = "lm", se = FALSE) +
ylab('Week (log transformed)') +
ggtitle('Sentimentality v. Week') +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
geom_point(color='purple')
boxplot(GH$Sentimentality)
boxplot(GH$Sentimentality)$out
outliers<- boxplot(GH$Sentimentality)$out
GH[which(GH$disp %in% outliers),]
GH
GH <- GH[-which(GH$disp %in% outliers),]
ggplot(data = GH, aes(x = Sentimentality, y = weekT)) +
geom_point(color='blue') +
geom_smooth(method = "lm", se = FALSE) +
ylab('Week (log transformed)') +
ggtitle('Sentimentality v. Week') +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
geom_point(color='purple')
GH
GH=read.csv('/Users/morganhogenmiller/Desktop/GitHub/DA_401/google_headlines.csv')
GH$weekT <- log(GH$Weeks)
GH$weekT10 <- log10(GH$Weeks)
Wikipedia
model=lm(weekT~Sentimentality,GH)
summary(model)
boxplot(GH$Sentimentality) #making a box plot to examine outliers
outliers<- boxplot(GH$Sentimentality)$out
GH[which(GH$disp %in% outliers),]
GH <- GH[-which(GH$disp %in% outliers),]
GH
GH[which(GH$Sentimentality %in% outliers),]
GH <- GH[-which(GH$disp %in% outliers),]
GH
GH <- GH[-which(GH$Sentimentality %in% outliers),]
GH
GH=read.csv('/Users/morganhogenmiller/Desktop/GitHub/DA_401/google_headlines.csv')
GH$weekT <- log(GH$Weeks)
GH$weekT10 <- log10(GH$Weeks)
Wikipedia
model=lm(weekT~Sentimentality,GH)
summary(model)
boxplot(GH$Sentimentality) #making a box plot to examine outliers
outliers<- boxplot(GH$Sentimentality)$out
outliers
GH[which(GH$Sentimentality %in% outliers),]
GH <- GH[-which(GH$Sentimentality %in% outliers),]
GH
ggplot(data = GH, aes(x = Sentimentality, y = weekT)) +
geom_point(color='blue') +
geom_smooth(method = "lm", se = FALSE) +
ylab('Week (log transformed)') +
ggtitle('Sentimentality v. Week') +
theme_bw() +
theme(plot.title = element_text(hjust = 0.5)) +
geom_point(color='purple')
summary(model)
knitr::opts_chunk$set(echo = TRUE)
melt.df <- melt(df[:,2:4])
melt.df <- melt(df[,2:4])
library(reshape2)
melt.df <- melt(df[,2:4])
melt.df <- melt(df[2:4])
setwd('/Users/morganhogenmiller/Desktop/GitHub/DA_401/Data sets')
df=read.csv('Broadway_Avg.csv')
library(ggplot2)
library(reshape2)
df
melt.df <- melt(df[2:4])
melt.df
library(reshape2)
ggplot(data = melt.df, aes(x = value)) +
stat_density() +
facet_wrap(~variable, scales = "free")
ggplot(data = melt.df, aes(x = value)) +
stat_hist() +
facet_wrap(~variable, scales = "free")
ggplot(data = melt.df, aes(x = value)) +
stat_histogram() +
facet_wrap(~variable, scales = "free")
ggplot(data = melt.df, aes(x = value)) +
shistogram() +
facet_wrap(~variable, scales = "free")
ggplot(data = melt.df, aes(x = value)) +
histogram() +
facet_wrap(~variable, scales = "free")
ggplot(data = melt.df, aes(x = value)) +
hist() +
facet_wrap(~variable, scales = "free")
ggplot(data = melt.df, aes(x = value)) +
geom_hist() +
facet_wrap(~variable, scales = "free")
library(ggplot2)
ggplot(data = melt.df, aes(x = value)) +
geom_histogram() +
facet_wrap(~variable, scales = "free")
df
melt.df <- melt(df[2,3,6,10])
variables=c('Attendance','Capacity','Gross','Performances')
melt.df <- melt(df[variables])
df2=df[variables]
df2=df[variables]
df2=df[variables]
variables=c('Attendance','Capacity','Gross','Performances')
df2=df[variables]
variables
variables=c('Attendance','Capacity')
variables
df2=df[variables]
melt.df <- melt(df[10:12])
melt.df
ggplot(data = melt.df, aes(x = value)) +
geom_histogram() +
facet_wrap(~variable, scales = "free")
melt.df <- melt(df[,10:12])
melt.df
melt.df <- melt(df[4:7])
melt.df
melt.df <- melt(df[4,6])
melt.df
df
melt.df <- melt(df[4:66])
melt.df <- melt(df[4:6])
melt.df
ggplot(data = melt.df, aes(x = value)) +
geom_histogram() +
facet_wrap(~variable, scales = "free")
variables=c('Attendance','Capacity')
variables
df2=df[variables]
variables=c('Capacity')
variables
df2=df[variables]
variables=c("Capacity"")
variables
df2=df[variables]
melt.df <- melt(df[4:6])
melt.df
#Creating figure with multiple columns
ggplot(data = melt.df, aes(x = value)) +
geom_histogram() +
facet_wrap(~variable, scales = "free")
variables=c("Capacity")
variables
df2=df[variables]
df2=df[c('Capacity','Attendance')]
df2=df[c(1,4:6)]
df2=df[c(2,3,6,10,11,12,14,15,16)]
melt.df <- melt(df2)
melt.df
ggplot(data = melt.df, aes(x = value)) +
geom_histogram() +
facet_wrap(~variable, scales = "free")
ggplot(data = melt.df, aes(x = value)) +
geom_histogram() +
facet_wrap(~variable)
scales = "free"
ggplot(data = melt.df, aes(x = value)) +
geom_histogram() +
facet_wrap(~variable, scales = "free")
ggplot(data = melt.df, aes(x = value)) +
stat_density() +
facet_wrap(~variable, scales = "free")
df$Type <- as.factor(df$Type)
df2=df[c(2,3,6,10,11,12,14,15,16)]
melt.df <- melt(df2)
melt.df
ggplot(data = melt.df, aes(x = value)) +
stat_density() +
facet_wrap(~variable, scales = "free")
df$Type
len(df)
nrow(df)
setwd('/Users/morganhogenmiller/Desktop/GitHub/DA_401/Data sets')
df=read.csv('Broadway_Avg.csv')
df=read.csv('Broadway_Avg.csv')
nrow(df)
setwd('/Users/morganhogenmiller/Desktop/GitHub/DA_401/Data sets')
df=read.csv('Broadway_Avg.csv')
library(ggplot2)
library(reshape2)
nrow(df)
ggplot(data = melt.df, aes(x = value)) +
stat_density() +
facet_wrap(~variable, scales = "free")
df$Type
df$Type <- as.factor(df$Type)
df2=df[c(2,3,6,10,11,12,14,15,16)]
melt.df <- melt(df2)
melt.df
ggplot(data = melt.df, aes(x = value)) +
stat_density() +
facet_wrap(~variable, scales = "free")
df
df2=df[c(2,3,6,10,11,12,14,15,21,22)]
melt.df <- melt(df2)
melt.df
ggplot(data = melt.df, aes(x = value)) +
stat_density() +
facet_wrap(~variable, scales = "free")
df2=df[c(2,3,6,8,10,11,12,14,15,21,22)]
df$Type <- as.factor(df$Type)
df2=df[c(2,3,6,8,10,11,12,14,15,21,22)]
melt.df <- melt(df2)
melt.df
ggplot(data = melt.df, aes(x = value)) +
stat_density() +
facet_wrap(~variable, scales = "free")
df.columns()
df.columns
columns(df)
columns(df)
colnames(df)
df_bw=df[c(3,4,6,8,22)]
melt.df <- melt(df_bw)
melt.df
ggplot(data = melt.df, aes(x = value)) +
stat_density() +
facet_wrap(~variable, scales = "free")
df_bw=df[c(3,4,6,9,22)]
melt.df <- melt(df_bw)
melt.df
ggplot(data = melt.df, aes(x = value)) +
stat_density() +
facet_wrap(~variable, scales = "free")
melt.df <- melt(df_color)
df_color=df[c(11,12,14,15,21)]
melt.df <- melt(df_color)
melt.df
ggplot(data = melt.df, aes(x = value)) +
stat_density() +
facet_wrap(~variable, scales = "free") +
ggplot(data = melt.df, aes(x = value)) +
stat_density() +
facet_wrap(~variable, scales = "free") +
melt.df
df_color=df[c(11,12,14,15,21)]
melt.df <- melt(df_color)
melt.df
ggplot(data = melt.df, aes(x = value)) +
stat_density() +
facet_wrap(~variable, scales = "free") +
ggplot(data = melt.df, aes(x = value)) +
stat_density() +
facet_wrap(~variable, scales = "free") +
df_color=df[c(11,12)]
df_bw=df[c(3,4,6,9,22)]
melt.df <- melt(df_bw)
melt.df
ggplot(data = melt.df, aes(x = value)) +
stat_density() +
facet_wrap(~variable, scales = "free") +
ggplot(data = melt.df, aes(x = value)) +
stat_density() +
facet_wrap(~variable, scales = "free") +
df_bw=df[c(3,4,6,9,22)]
melt.df <- melt(df_bw)
setwd('/Users/morganhogenmiller/Desktop/GitHub/DA_401/Data sets')
df=read.csv('Broadway_Avg.csv')
library(ggplot2)
library(reshape2)
colnames(df)
df_bw=df[c(3,4,6,9,22)]
melt.df <- melt(df_bw)
melt.df
ggplot(data = melt.df, aes(x = value)) +
stat_density() +
facet_wrap(~variable, scales = "free") +
ggplot(data = melt.df, aes(x = value)) +
stat_density() +
facet_wrap(~variable, scales = "free") +
ggplot(data = melt.df, aes(x = value)) +
stat_density() +
facet_wrap(~variable, scales = "free") +
#Importing Braodway_Avg
setwd('/Users/morganhogenmiller/Desktop/GitHub/DA_401/Data sets')
#Importing Braodway_Avg
setwd('/Users/morganhogenmiller/Desktop/GitHub/DA_401/Data sets')
df=read.csv('Broadway_Avg.csv')
library(ggplot2)
library(reshape2)
colnames(df)
#Rename total and
# Multiple histograms
#First, have to melt the data so that it sees each columns as calues in the variable column and their values in a seperate column
df_bw=df[c(3,4,6,9,22)]
melt.df <- melt(df_bw)
melt.df
#Creating figure with multiple columns
ggplot(data = melt.df, aes(x = value)) +
stat_density() +
facet_wrap(~variable, scales = "free") +
